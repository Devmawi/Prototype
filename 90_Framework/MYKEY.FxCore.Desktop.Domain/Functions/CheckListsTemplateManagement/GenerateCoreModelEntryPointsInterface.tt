<#@ template language="VB" debug="true" hostSpecific="true" #>
<#@ output extension=".vb" #>
<#@ Assembly Name="System.Core.dll" #>
<#@ Assembly Name="System.Xml.dll" #>
<#@ Assembly Name="System.Xml.Linq.dll" #>
<#@ Assembly Name="System.Windows.Forms.dll" #>
<#@ import namespace="System" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Diagnostics" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Xml" #>
<#@ import namespace="System.Xml.Linq" #>
<#@ import namespace="System.Collections" #>
<#@ import namespace="System.Collections.Generic" #>
' ###################################################################
' #  T4-Name	: GenerateCoreModelEntryPointsInterface.tt          #
' #  Date		: 2021-11-03                                        #
' #  Version	: 1                           (c) MyKey-Soft 2015   #
' ###################################################################
Imports MYKEY.FxCore.Common
<#
If GetValue("ModelName")="MYKEY.FxCore.DataAccess"
#>
Imports MYKEY.FxCore.DataAccess
<#
End If
#>
Imports System.Collections.ObjectModel
Imports System.Security.Principal
Imports <#=GetValue("EntityModelAssembly")#>
Imports <#=GetValue("EntityNamespace")#>
Imports MYKEY.FxCore.Common.Application
Imports System.Data.Entity.Infrastructure

Public Interface I<#=GetValue("ModelName")#>_ModelEntryPoints

#Region "Queries"

#Region "Queries"

    ''' <summary>
    ''' Zum definieren, wie die Standardabfrage aussehen soll
    ''' </summary>
    ''' <param name="defaultQueryResult"></param>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Function EntryPoint_DefineDefaultQuery(currentDefaultQuery As DbQuery(Of <#=GetValue("EntityNameSingle")#>))

#End Region


#End Region 

#Region "Functions"

	''' <summary>
    ''' Bevor ein Eintrag hinzugefügt wird, können mit dieser Funktion noch Veränderungen vorgenommen werden
    ''' </summary>
    ''' <param name="<#=GetValue("EntityNameSingle")#>Entity"></param>
    ''' <returns></returns>
    ''' <remarks></remarks>
	Function EntryPoint_BeforeAddNew<#=GetValue("EntityNameSingle")#>(<#=GetValue("EntityNameSingle")#>Entity As <#=GetValue("EntityNameSingle")#>)

    ''' <summary>
    ''' In dieser Funktion können Prüfungen erfolgen, die mit den möglichen Entity-Validations nicht möglich sind
    ''' </summary>
    ''' <param name="Dbctx"></param>
    ''' <param name="<#=GetValue("EntityNameSingle")#>Entity"></param>
    ''' <returns></returns>
    ''' <remarks></remarks>
	Function EntryPoint_CheckAddNew<#=GetValue("EntityNameSingle")#>(Dbctx As Entities, <#=GetValue("EntityNameSingle")#>Entity As <#=GetValue("EntityNameSingle")#>) As Boolean

    ''' <summary>
    ''' Erstellt einen neuen Eintrag der mit den Standardwerten gefüllt wird
    ''' </summary>
    ''' <returns></returns>
    ''' <remarks></remarks>
	Function EntryPoint_Copy<#=GetValue("EntityNameSingle")#>(<#=GetValue("EntityNameSingle")#>EntityCopy as <#=GetValue("EntityNameSingle")#>) As <#=GetValue("EntityNameSingle")#>

    ''' <summary>
    ''' Der Kopierte Eintrag kann vor dem speichern nochmal geändert werden
    ''' </summary>
    ''' <returns></returns>
    ''' <remarks></remarks>
	Function EntryPoint_GenerateValid<#=GetValue("EntityNameSingle")#>Entity() As <#=GetValue("EntityNameSingle")#>

	''' <summary>
    ''' Nachdem ein Eintrag hinzugefügt wurde, kann mit dieser Funktion noch weitere Veränderungen vorgenommen werden
    ''' </summary>
    ''' <param name="<#=GetValue("EntityNameSingle")#>Entity"></param>
    ''' <returns></returns>
    ''' <remarks></remarks>
	Function EntryPoint_AfterAddNew<#=GetValue("EntityNameSingle")#>(<#=GetValue("EntityNameSingle")#>Entity As <#=GetValue("EntityNameSingle")#>) As ServerResult

	''' <summary>
    ''' Bevor ein Eintrag verändert wird, kann mit dieser Funktion mit den unveränderten Daten noch gearbeitet werden
    ''' </summary>
    ''' <param name="<#=GetValue("EntityNameSingle")#>Entity"></param>
    ''' <returns></returns>
    ''' <remarks></remarks>
	Function EntryPoint_BeforeModify<#=GetValue("EntityNameSingle")#>(<#=GetValue("EntityNameSingle")#>Entity As <#=GetValue("EntityNameSingle")#>) As ServerResult

	''' <summary>
    ''' Bevor ein Eintrag in die Datenbank geschrieben wird, kann mit dieser Funktion die Entität noch angepasst werden
    ''' </summary>
    ''' <param name="<#=GetValue("EntityNameSingle")#>Entity"></param>
    ''' <returns></returns>
    ''' <remarks></remarks>
	Function EntryPoint_ModifyEntityBeforeModify<#=GetValue("EntityNameSingle")#>(<#=GetValue("EntityNameSingle")#>Entity As <#=GetValue("EntityNameSingle")#>) As <#=GetValue("EntityNameSingle")#>

	''' <summary>
    ''' Nachdem ein Eintrag verändert wurde, kann mit dieser Funktion noch weitere Veränderungen vorgenommen werden
    ''' </summary>
    ''' <param name="<#=GetValue("EntityNameSingle")#>Entity"></param>
    ''' <returns></returns>
    ''' <remarks></remarks>
	Function EntryPoint_AfterModify<#=GetValue("EntityNameSingle")#>(<#=GetValue("EntityNameSingle")#>Entity As <#=GetValue("EntityNameSingle")#>) As ServerResult

	''' <summary>
    ''' Nachdem ein Eintrag gelöscht wurde, können mit dieser Funktion noch weitere Veränderungen vorgenommen werden
    ''' </summary>
    ''' <param name="<#=GetValue("EntityNameSingle")#>Entity"></param>
    ''' <returns></returns>
    ''' <remarks></remarks>
	Function EntryPoint_AfterDelete<#=GetValue("EntityNameSingle")#>(<#=GetValue("EntityNameSingle")#>Entity As <#=GetValue("EntityNameSingle")#>) As ServerResult


	
#End Region


End Interface
<#+

Public Function GetValue(ValueName As String) As String
	
	Dim result As String

	Dim doc As New XmlDocument()

	Dim absolutePath As String = Me.Host.ResolvePath("ModelData.xml")

	doc.Load(absolutePath)

	dim node As XmlNode = doc.SelectSingleNode("ModelData")
		
	result= node.SelectSingleNode(ValueName).InnerText
	
	Return result

End Function
#>