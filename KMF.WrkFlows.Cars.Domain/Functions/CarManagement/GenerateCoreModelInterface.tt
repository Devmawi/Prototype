<#@ template language="VB" debug="true" hostSpecific="true" #>
<#@ output extension=".vb" #>
<#@ Assembly Name="System.Core.dll" #>
<#@ Assembly Name="System.Xml.dll" #>
<#@ Assembly Name="System.Xml.Linq.dll" #>
<#@ Assembly Name="System.Windows.Forms.dll" #>
<#@ import namespace="System" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Diagnostics" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Xml" #>
<#@ import namespace="System.Xml.Linq" #>
<#@ import namespace="System.Collections" #>
<#@ import namespace="System.Collections.Generic" #>
' ###################################################################
' #  T4-Name	: GenerateCOreModelInterface.tt                     #
' #  Date		: 2021-11-03                                        #
' #  Version	: 1                           (c) MyKey-Soft 2015   #
' ###################################################################
Imports MYKEY.FxCore.Common
<#
If GetValue("ModelName")="MYKEY.FxCore.DataAccess"
#>
Imports MYKEY.FxCore.DataAccess
<#
End If
#>
Imports System.Collections.ObjectModel
Imports System.Security.Principal
Imports <#=GetValue("EntityModelAssembly")#>
Imports <#=GetValue("EntityNamespace")#>
Imports MYKEY.FxCore.Common.Application

Public Interface I<#=GetValue("ModelName")#>

#Region "Functions"

    Function CreateNew<#=GetValue("EntityNameSingle")#>() As ServerResult

    Function CreateNew<#=GetValue("EntityNameSingle")#>(<#=GetValue("EntityNameSingle")#>Entity As <#=GetValue("EntityNameSingle")#>) As ServerResult

	Function Copy<#=GetValue("EntityNameSingle")#>(<#=GetValue("EntityNameSingle")#>Entity As <#=GetValue("EntityNameSingle")#>) As ServerResult

    Function Modify<#=GetValue("EntityNameSingle")#>(<#=GetValue("EntityNameSingle")#>Entity As <#=GetValue("EntityNameSingle")#>) As ServerResult

    Function Delete<#=GetValue("EntityNameSingle")#>(<#=GetValue("EntityNameSingle")#>GUID As String, Optional PermanentlyDelete As Boolean = True) As ServerResult

	Function Delete<#=GetValue("EntityNamePlural")#>(<#=GetValue("EntityNamePlural")#> As <#=GetValue("EntityNameSingle")#>(), Optional PermanentlyDelete As Boolean = True) As ServerResult

#End Region

#Region "Queries"

    Function Get<#=GetValue("EntityNamePlural")#>(Optional QParam As QueryParameters = Nothing) As ObservableCollection(Of <#=GetValue("EntityNameSingle")#>)

	Function Get<#=GetValue("EntityNamePlural")#>(<#=GetValue("EntityNameSingle")#>Guids As List(Of Guid), Optional QParam As QueryParameters = Nothing) As ObservableCollection(Of <#=GetValue("EntityNameSingle")#>)

    Function Get<#=GetValue("EntityNameSingle")#>(<#=GetValue("EntityNameSingle")#>GUID As String, Optional QParam As QueryParameters = Nothing) As <#=GetValue("EntityNameSingle")#>

#End Region

End Interface
<#+

Public Function GetValue(ValueName As String) As String
	
	Dim result As String

	Dim doc As New XmlDocument()

	Dim absolutePath As String = Me.Host.ResolvePath("ModelData.xml")

	doc.Load(absolutePath)

	dim node As XmlNode = doc.SelectSingleNode("ModelData")
		
	result= node.SelectSingleNode(ValueName).InnerText
	
	Return result

End Function
#>